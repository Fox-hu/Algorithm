import javax.inject.Inject

task task1 {
    println 'first task'
}

task1.doFirst {
    println 'task1 doFirst'
}

task1.doLast {
    println 'task1 doLast'
}

task task2 {
    println 'second task'
}

task2.doFirst {
    println 'task2 doFirst'
}

task2.doLast {
    println 'task2 doLast'
}

project.task("task3").doFirst {
    println 'doLast in task3'
}

project.tasks.create("task4").doLast {
    println 'doLast in task4'
}

task task5 {
    doFirst {
        println 'doFirst in task5'
    }
    doLast {
        println 'doLast in task5'
    }
}

task task6 {
    doLast {
        println 'doLast in task6, this is old task'
    }
}

task task7(description: "task7描述", group: "myTaskGroup", dependsOn: [task1, task2]){
    doLast {
        println 'doLast in task6, this is new task'
    }
}

//自定义Task类，必须继承自DefaultTask
class SayHelloTask extends DefaultTask {

    @Internal String msg = "default name"
    @Internal int age = 18

    //构造函数必须用@javax.inject.Inject注解标识
    @Inject
    SayHelloTask(int age) {
        this.age = age
    }

    //通过@TaskAction注解来标识该Task要执行的动作
    @TaskAction
    void sayHello() {
        println "Hello $msg ! age is ${age}"
    }

}

//通过constructorArgs参数来指定构造函数的参数值
task hello1(type: SayHelloTask, constructorArgs: [30])

//通过type参数指定task的父类，可以在配置代码里修改父类的属性
task hello2(type: SayHelloTask, constructorArgs: [18]) {
    //配置代码里修改 SayHelloTask 里的字段 msg 的值
    msg = "fox"
}
